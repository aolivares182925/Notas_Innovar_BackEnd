// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NotasAPI.Modules;

#nullable disable

namespace NotasAPI.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NotasAPI.Modules.AcademicDepartment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AcademicDepartments");
                });

            modelBuilder.Entity("NotasAPI.Modules.Alternative", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Alternative1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Alternative2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Alternative3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Alternative4")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorrectAlternative")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("IdQuestion")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Alternatives");
                });

            modelBuilder.Entity("NotasAPI.Modules.Answer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("IdQuestion")
                        .HasColumnType("bigint");

                    b.Property<long>("IdStudent")
                        .HasColumnType("bigint");

                    b.Property<string>("SelectedAnswer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Answers");
                });

            modelBuilder.Entity("NotasAPI.Modules.Chapter", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("IDCourse")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Chapters");
                });

            modelBuilder.Entity("NotasAPI.Modules.Course", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("Credits")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("NotasAPI.Modules.CourseRegistration", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("IdCourse")
                        .HasColumnType("bigint");

                    b.Property<long>("IdRegistration")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("CourseRegistrations");
                });

            modelBuilder.Entity("NotasAPI.Modules.Exam", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("IdChapter")
                        .HasColumnType("bigint");

                    b.Property<float>("Score")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("Exams");
                });

            modelBuilder.Entity("NotasAPI.Modules.ProfessionalSchool", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("IdAcademicDepartment")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdAcademicDepartment");

                    b.ToTable("ProfessionalSchools");
                });

            modelBuilder.Entity("NotasAPI.Modules.Question", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("IdExam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TextQuestion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("NotasAPI.Modules.Registration", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("IdCourse")
                        .HasColumnType("bigint");

                    b.Property<long>("IdProfessionalSchool")
                        .HasColumnType("bigint");

                    b.Property<long>("IdSemester")
                        .HasColumnType("bigint");

                    b.Property<long>("IdStudent")
                        .HasColumnType("bigint");

                    b.Property<long?>("SemesterId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("SemesterId");

                    b.ToTable("Registrations");
                });

            modelBuilder.Entity("NotasAPI.Modules.Semester", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("DateFinish")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateStart")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Semesters");
                });

            modelBuilder.Entity("NotasAPI.Modules.Student", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("NotasAPI.Modules.Teacher", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("NotasAPI.Modules.TeacherCourse", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("IdCourse")
                        .HasColumnType("bigint");

                    b.Property<long>("IdTeacher")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("TeacherCourses");
                });

            modelBuilder.Entity("NotasAPI.Modules.ProfessionalSchool", b =>
                {
                    b.HasOne("NotasAPI.Modules.AcademicDepartment", "AcademicDepartment")
                        .WithMany("ProfessionalSchools")
                        .HasForeignKey("IdAcademicDepartment")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AcademicDepartment");
                });

            modelBuilder.Entity("NotasAPI.Modules.Registration", b =>
                {
                    b.HasOne("NotasAPI.Modules.Semester", null)
                        .WithMany("Registrations")
                        .HasForeignKey("SemesterId");
                });

            modelBuilder.Entity("NotasAPI.Modules.AcademicDepartment", b =>
                {
                    b.Navigation("ProfessionalSchools");
                });

            modelBuilder.Entity("NotasAPI.Modules.Semester", b =>
                {
                    b.Navigation("Registrations");
                });
#pragma warning restore 612, 618
        }
    }
}
